#! /bin/sh /usr/share/dpatch/dpatch-run
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: this patch is used to pin sendmail path even when there is not
## DP: sendmail on the system

@DPATCH@
From d0816df43a849f77c798bc974068c1c872c0ad28 Mon Sep 17 00:00:00 2001
From: Yauheni Kaliuta <y.kaliuta@gmail.com>
Date: Fri, 19 Sep 2008 00:04:17 +0300
Subject: [PATCH] Added tl_for_each

---
 src/common/textlist.c    |   14 ++++++++++++++
 src/include/prototypes.h |    1 +
 2 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/src/common/textlist.c b/src/common/textlist.c
index 5aa4301..e41ec3f 100644
--- a/src/common/textlist.c
+++ b/src/common/textlist.c
@@ -277,3 +277,17 @@ int tl_copy(Textlist *dst, Textlist *src)
 	tl_append(dst, p->line);
     return OK;
 }
+
+int tl_for_each(Textlist *list, int (*func)(Textline *, void *), void *arg)
+{
+    Textline *p;
+    int r;
+
+    for(p = list->first; p != NULL; p = p->next)
+    {
+	r = func(p, arg);
+	if (r != OK)
+	    return r;
+    }
+    return OK;
+}
diff --git a/src/include/prototypes.h b/src/include/prototypes.h
index 35df6e5..82ea94a 100644
--- a/src/include/prototypes.h
+++ b/src/include/prototypes.h
@@ -623,6 +623,7 @@ void	tl_addtl		(Textlist *, Textlist *);
 Textline* tl_get		(Textlist *, char *, int);
 char*	tl_get_str		(Textlist *, char *, int);
 int	tl_copy			(Textlist *, Textlist *);
+int	tl_for_each		(Textlist *, int (*)(Textline *, void *), void *);
 /* tick.c */
 int	copy_file		(char *, char *, char *);
 void	tick_init		(Tick *);
-- 
1.5.6.5

From eef09852f37a15262ed5c69e0737550f5622fd1f Mon Sep 17 00:00:00 2001
From: Yauheni Kaliuta <y.kaliuta@gmail.com>
Date: Fri, 19 Sep 2008 00:58:45 +0300
Subject: [PATCH] A hack to encode all non-7bit headers

---
 src/gate/ftn2rfc.c |   54 +++++++++++++++++++++++++++++++++++++++------------
 1 files changed, 41 insertions(+), 13 deletions(-)

diff --git a/src/gate/ftn2rfc.c b/src/gate/ftn2rfc.c
index fb1aef0..15667f1 100644
--- a/src/gate/ftn2rfc.c
+++ b/src/gate/ftn2rfc.c
@@ -452,6 +452,38 @@ int msg_format_buffer(char *buffer, Textlist *tlist)
     return 0;
 }
 
+struct encoding_state {
+    int cvt8;
+    char *cs_out;
+    Textlist *theader;
+};
+
+static int encode_header(Textline *tl, void *arg)
+{
+    struct encoding_state *state = arg;
+    char *line = tl->line;
+    char *tmpbuf = NULL;
+    char *p;
+    int size;
+    
+    if((is_7bit(line, strlen(line))) || (!(state->cvt8 & AREA_HB64)))
+	return OK;
+    
+    p = strstr(line, ": ");
+    if (p == NULL)
+	return OK;
+
+    size = strlen(p + 2);
+    mime_enheader(&tmpbuf, p + 2, size, state->cs_out);
+
+    size += (p - line) + 2 + strlen(tmpbuf) + 2;
+    tl->line = xrealloc(line, size);
+    strcpy(tl->line + (p + 2 - line), tmpbuf);
+    strcat(tl->line, "\n");
+    xfree(tmpbuf);
+    
+    return OK;
+}
 
 
 /*
@@ -495,8 +527,8 @@ int unpack(FILE *pkt_file, Packet *pkt)
     MIMEInfo *mime;
     char *mime_ver, *mime_type, *mime_enc;
     char *carbon_group = NULL;
-
-
+    struct encoding_state en_state;
+    
     /*
      * Initialize
      */
@@ -1336,19 +1368,9 @@ int unpack(FILE *pkt_file, Packet *pkt)
 	
 	if ( NULL == msgbody_rfc_subject )
 	{
-            char *tmpbuf;
 	    msg_xlate_line(buffer, sizeof(buffer), msg.subject,
 			   cvt8 & AREA_QP, ignore_soft_cr);
-            if((! is_7bit(buffer, strlen(buffer))) && (cvt8 & AREA_HB64))
-            {
-                mime_enheader(&tmpbuf, buffer, strlen(buffer), cs_out);
-                tl_appendf(&theader, "Subject: %s\n", tmpbuf);
-                xfree(tmpbuf);
-            }
-            else
-            {
-                tl_appendf(&theader, "Subject: %s\n", buffer);
-            }
+	    tl_appendf(&theader, "Subject: %s\n", buffer);
 	}
 	else
 	{
@@ -1666,6 +1688,12 @@ carbon:
 	    
 	tl_appendf(&theader, "\n");
 
+	en_state.cvt8 = cvt8;
+	en_state.cs_out = cs_out;
+	en_state.theader = &theader;
+	
+	tl_for_each(&theader, encode_header, &en_state);
+	
 	/* Write header and message body to output file */
 	if(area)
 	{
-- 
1.5.6.5

